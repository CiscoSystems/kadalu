# -*- mode: yaml -*-
---
## Deploy CSI NodePlugin
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: kadalu-csi-nodeplugin
  namespace: {{ namespace }}
  labels:
    app.kubernetes.io/part-of: kadalu
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/name: kadalu-csi-nodeplugin
spec:
  selector:
    matchLabels:
      app.kubernetes.io/part-of: kadalu
      app.kubernetes.io/component: csi-driver
      app.kubernetes.io/name: kadalu-csi-nodeplugin
  updateStrategy:
    type: OnDelete
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: kadalu
        app.kubernetes.io/component: csi-driver
        app.kubernetes.io/name: kadalu-csi-nodeplugin
      namespace: {{ namespace }}
    spec:
      serviceAccountName: kadalu-csi-nodeplugin
      containers:
        - name: csi-node-driver-registrar
          image: {{ images_hub }}/raspbernetes/csi-node-driver-registrar:2.0.1
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rf /registration/kadalu /registration/kadalu-reg.sock"]
          env:
            - name: ADDRESS
              value: /plugin/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: {{ kubelet_dir }}/plugins/kadalu/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: KADALU_VERSION
              value: "{{ kadalu_version }}"
            - name: K8S_DIST
              value: "{{ k8s_dist }}"
            - name: VERBOSE
              value: "{{ verbose }}"
          volumeMounts:
            - name: plugin-dir
              mountPath: /plugin
            - name: registration-dir
              mountPath: /registration
        - name: kadalu-nodeplugin
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: {{ images_hub }}/{{ docker_user }}/kadalu-csi:{{ kadalu_version }}
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - '-c'
                  - >
                    mount | grep glusterfs | awk '{print $1 " " $3}' | sed 's/:/
                    /' | awk '{print "umount " $3 ";glusterfs --process-name
                    fuse --volfile-id " $2 " --volfile-server " $1 "
                    --log-level=WARNING " $3}' > /tmp/remount.sh ; chmod +x
                    /tmp/remount.sh ; /tmp/remount.sh
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix://plugin/csi.sock
            - name: KADALU_VERSION
              value: "{{ kadalu_version }}"
            - name: K8S_DIST
              value: "{{ k8s_dist }}"
            - name: VERBOSE
              value: "{{ verbose }}"
            - name: CSI_ROLE
              value: "nodeplugin"
          volumeMounts:
            - name: plugin-dir
              mountPath: /plugin
            - name: pods-mount-dir
              mountPath: {{ kubelet_dir }}/pods
              mountPropagation: "Bidirectional"
            - name: glusterfsd-volfilesdir
              mountPath: "/var/lib/gluster"
            - name: gluster-dev
              mountPath: "/dev"
            - name: varlog
              mountPath: /var/log/gluster
            - name: csi-dir
              mountPath: {{ kubelet_dir }}/plugins/kubernetes.io/csi
              mountPropagation: "Bidirectional"
        - name: kadalu-logging
          image: {{ images_hub }}/library/busybox
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args: ["-c", "while true; do logcnt=$(/bin/ls /var/log/gluster/ | wc -l); if [ ${logcnt} -gt 0 ]; then break; fi; sleep 5; done; tail -f /var/log/gluster/*.log"]
          volumeMounts:
            - name: varlog
              mountPath: "/var/log/gluster"
      volumes:
        - name: plugin-dir
          hostPath:
            path: {{ kubelet_dir }}/plugins/kadalu
            type: DirectoryOrCreate
        - name: pods-mount-dir
          hostPath:
            path: {{ kubelet_dir }}/pods
            type: Directory
        - name: registration-dir
          hostPath:
            path: {{ kubelet_dir }}/plugins_registry/
            type: Directory
        - name: glusterfsd-volfilesdir
          configMap:
            name: "kadalu-info"
        - name: gluster-dev
          hostPath:
            path: "/dev"
        - name: varlog
          emptyDir: {}
        - name: csi-dir
          hostPath:
            path: {{ kubelet_dir }}/plugins/kubernetes.io/csi/
            type: DirectoryOrCreate
---
## Deploy CSI Provisioner
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: kadalu-csi-provisioner
  namespace: {{ namespace }}
  labels:
    app.kubernetes.io/part-of: kadalu
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/name: kadalu-csi-provisioner
spec:
  serviceName: kadalu-csi-provisioner
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: kadalu
      app.kubernetes.io/component: csi-driver
      app.kubernetes.io/name: kadalu-csi-provisioner
  template:
    metadata:
      name: csi-provisioner
      namespace: {{ namespace }}
      labels:
        app.kubernetes.io/part-of: kadalu
        app.kubernetes.io/component: csi-driver
        app.kubernetes.io/name: kadalu-csi-provisioner
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "cw-node-type"
                operator: In
                values:
                - "master"
                - "hybrid"
      serviceAccountName: kadalu-csi-provisioner
      containers:
        - name: csi-provisioner
          image: registry.k8s.io/sig-storage/csi-provisioner:v3.5.0
          ports:
            - containerPort: 8080
              name: http-endpoint
              protocol: TCP
          livenessProbe:
            failureThreshold: 2
            httpGet:
                path: /healthz/leader-election
                port: http-endpoint
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 30
          args:
            - "--csi-address=$(ADDRESS)"
            - "--timeout=3m"
            - "--leader-election"
            - "--http-endpoint=:8080"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
            - name: KADALU_VERSION
              value: "{{ kadalu_version }}"
            - name: K8S_DIST
              value: "{{ k8s_dist }}"
            - name: VERBOSE
              value: "{{ verbose }}"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-attacher
          image: registry.k8s.io/sig-storage/csi-attacher:v4.3.0
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
            - "--http-endpoint=:8081"
          ports:
            - containerPort: 8081
              name: http-endpoint
              protocol: TCP
          readinessProbe:
            failureThreshold: 2
            httpGet:
                path: /healthz/leader-election
                port: http-endpoint
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 20
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
            - name: KADALU_VERSION
              value: "{{ kadalu_version }}"
            - name: K8S_DIST
              value: "{{ k8s_dist }}"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: kadalu-provisioner
          securityContext:
            privileged: true
            capabilities:
              add: ["CAP_SYS_ADMIN", "SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: dockerhub.cisco.com/robot-dockerprod/kadalu-csi-driver:2.0.9
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: SECRET_GLUSTERQUOTA_SSH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: glusterquota-ssh-secret
                  key: glusterquota-ssh-username
                  optional: true
            - name: CSI_ENDPOINT
              value: unix://plugin/csi.sock
            - name: KADALU_VERSION
              value: "{{ kadalu_version }}"
            - name: K8S_DIST
              value: "{{ k8s_dist }}"
            - name: VERBOSE
              value: "{{ verbose }}"
            - name: CSI_ROLE
              value: "provisioner"
          volumeMounts:
            - name: socket-dir
              mountPath: /plugin
            - name: glusterfsd-volfilesdir
              mountPath: "/var/lib/gluster"
            - name: gluster-dev
              mountPath: "/dev"
            - name: varlog
              mountPath: "/var/log/gluster"
            - name: secret-volume
              readOnly: true
              mountPath: "/etc/secret-volume"
        - name: kadalu-logging
          image: {{ images_hub }}/library/busybox
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args: ["-c", "while true; do logcnt=$(/bin/ls /var/log/gluster/ | wc -l); if [ ${logcnt} -gt 0 ]; then break; fi; sleep 5; done; tail -F /var/log/gluster/*.log"]
          volumeMounts:
            - name: varlog
              mountPath: "/var/log/gluster"
        - name: csi-resizer
          image: registry.k8s.io/sig-storage/csi-resizer:v1.8.0
          ports:
            - containerPort: 8082
              name: http-endpoint
              protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
                path: /healthz/leader-election
                port: http-endpoint
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 20
          args:
            - "--csi-address=$(ADDRESS)"
            - "--timeout=3m"
            - "--leader-election"
            - "--http-endpoint=:8082"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
            - name: KADALU_VERSION
              value: "{{ kadalu_version }}"
            - name: K8S_DIST
              value: "{{ k8s_dist }}"
            - name: VERBOSE
              value: "{{ verbose }}"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
      volumes:
        - name: socket-dir
          emptyDir:
        - name: glusterfsd-volfilesdir
          configMap:
            name: "kadalu-info"
        - name: gluster-dev
          hostPath:
            path: "/dev"
        - name: varlog
          emptyDir: {}
        - name: secret-volume
          secret:
            secretName: glusterquota-ssh-secret
            defaultMode: 384
            optional: true
